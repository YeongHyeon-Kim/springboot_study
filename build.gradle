buildscript {
    //ext는 전역변수를 설정하겠다는 의미
    ext{
        springBootVersion = '2.4.5'
    }
    repositories {
        mavenCentral()
        jcenter()
        //라이브러리 간단하게 업로드, mavenCentral에도 업로드할수있도록 자동화 할수있음
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
plugins {
    id 'java'
    id 'eclipse'
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

//각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을지 정하는 것.
repositories {
    mavenCentral()
    //예전부터 많이 사용하는 저장소이지만 많은 과정과 설정이 필요함

}

group = 'com.study'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

//프로젝트 개발에 필요한 의존성들을 선언하는 곳
//특정버전을 지정하지 않아야만 맨위에 작성한 버젼을 따라가게된다.
dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //스프링부트용 Spring Data Jpa 추상화 라이브러리
    //버전에 맞춰 자동으로 JPA관련 라이브러리들의 버전을 관리해줌
    implementation 'com.h2database:h2'
    //인메모리 관계형 데이터베이스
    //별도의 설치가 필요없음, 메모리에서 실행되기 때문에 애플리케이션을 재시작할때마다 초기화됨
    //테스트 용도로 많이 사용된다.

    implementation 'org.springframework.boot:spring-boot-starter-mustache'


}

test { // (2)
    useJUnitPlatform()
}